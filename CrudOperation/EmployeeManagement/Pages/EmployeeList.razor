@page "/EmployeeList"
@using EmployeeManagement.Data
@inject EmployeeService employeeService
@inject DataExtraService dataExtraService

<style>
    .inline-link {
        display: inline-block;
        margin-right: 10px; /* Adjust this value to add spacing between the links */
    }

    .vertical-align-center {
        display: flex;
        align-items: center;
    }
</style>
<h1>Employee List</h1>
<NavLink class="nav-link" href="AddEmployee">
    <span class="oi oi-plus" aria-hidden="true">Add New Employee</span>
</NavLink>
<div class="row" style="padding: 10px;">
    <div class="col-md-4">
        <input type="text" @bind="@searchId" class="form-control" placeholder="Search by User Name" />
    </div>
    <div class="col-md-4">
        <input type="text" @bind="@searchEmail" class="form-control" placeholder="Search by Email Address" />
    </div>
    <div class="col-md-4">
        <button @onclick="ToggleAdvancedSearch" class="btn btn-primary btn-small">
            <i class="@(toggleAdvSearch ? "fa fa-minus" : "fa fa-plus")"></i> Advanced Search
        </button>
    </div>
    @if (toggleAdvSearch)
    {
        <div class="col-md-12 table-form" style="margin-top:20px;">
            <table class="form" width="100%" border="0">
                <tbody>
                

                <tr>
                    
                    <td class="">Department</td>
                    <td class="" style="padding-right:50px;">
                        <select id="Department" class="form-control" @bind="@department">
                            <option value="">--Search By Department--</option>
                            @foreach (var department in departmentList)
                            {
                                <option value="@department.Name">@department.Name</option>
                            }
                        </select>
                    </td>
                    <td class="">Designation</td>
                    <td class="" style="padding-right:50px;">
                        <select id="Designation" class="form-control" @bind="@designation">
                                <option value="">--Search By Designation--</option>
                            @foreach (var designation in designationList)
                            {
                                <option value="@designation.Title">@designation.Title</option>
                            }
                        </select>
                    </td>
                </tr>
        
                <tr><td></td></tr>
                <tr>
                    <td class="">Phone Number</td>
                    <td class="" style="padding-right:50px;">
                        <input type="text" @bind="phoneNumber" class="form-control" placeholder="Search By Phone Number" maxlength="150" required />
                    </td>
                    <td class="">Address</td>
                    <td class="" style="padding-right:50px;">
                        <input type="text" @bind="address" class="form-control" placeholder="Search By Address" maxlength="150" required />
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    }

    <div class="col-md-12 text-center" style="margin-top: 10px;">
        <button @onclick="LoadEmployees" class="btn btn-md btn-primary">
            <span class="oi oi-magnifying-glass"></span> Search
        </button>
    </div>
</div>



@if (employees == null)
{
    <p>Loading...</p>
}
else if (employees.Any())
{

    <table class="table">
        <thead>
            <tr>
                <th>Employee ID</th>
                <th>User Name</th>
                <th>Name</th>
                <th>Email</th>
                <th>Department</th>
                <th>Designation</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                <tr>
                    <td>@employee.Id</td>
                    <td>@employee.UserName</td>
                    <td>@employee.FirstName</td>
                    <td>@employee.EmailAddress</td>
                    <td>@employee.Department</td>
                    <td>@employee.Designation</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="EmployeeDetails/@employee.Id">
                            <span class="oi oi-view" aria-hidden="true">View</span>
                        </a>
                        <a class="btn btn-info btn-sm" href="EditEmployee/@employee.Id">
                            <span class="oi oi-pencil" aria-hidden="true">Edit</span>
                        </a>
                        <a class="btn btn-danger btn-sm" href="Delete/@employee.Id">
                            <span class="oi oi-trash" aria-hidden="true">Delete</span>
                        </a>
                    </td>

                </tr>
            }
        </tbody>
    </table>

    <div class="vertical-align-center" style="margin-bottom: 100px">
        <button class="btn btn-primary" disabled="@IsFirstPage()" @onclick="PreviousPage">Previous</button>
        <span style="margin: 10px;">Page @currentPage of @totalPages</span>
        <button class="btn btn-primary" disabled="@IsLastPage()" @onclick="NextPage">Next</button>
    </div>

}
else
{
    <p>No employees found.</p>
}

@code {
    List<Employee> employees;
    bool toggleAdvSearch = false;
    int currentPage = 1;
    int pageSize = 5; // Adjust page size as needed
    int totalPages;
    string searchEmail = "";
    string searchId = "";
    string designation = "";
    string department = "";
    string phoneNumber = "";
    string address = "";
    List<Department> departmentList = new List<Department>();
    List<Designation> designationList = new List<Designation>();

    void ToggleAdvancedSearch()
    {
        toggleAdvSearch = !toggleAdvSearch;
    }


    protected override async Task OnInitializedAsync()
    {
         await LoadEmployees();
         departmentList = await dataExtraService.GetAllDepartment();
         designationList = await dataExtraService.GetAllDesignation();
    }

    private async Task LoadEmployees()
    {
        var totalCount = await employeeService.GetTotalEmployeesCount(searchEmail);
        totalPages = (int)Math.Ceiling(totalCount / (double)pageSize);

        employees = await employeeService.GetPagedEmployees(searchId
            ,searchEmail
            , designation
            , department
            , phoneNumber
            ,address
            , pageSize, currentPage);
    }

    private async Task NextPage()
    {
        if (!IsLastPage())
        {
            currentPage++;
            await LoadEmployees();
        }
    }

    private async Task PreviousPage()
    {
        if (!IsFirstPage())
        {
            currentPage--;
            await LoadEmployees();
        }
    }

    private bool IsFirstPage()
    {
        return currentPage == 1;
    }

    private bool IsLastPage()
    {
        return currentPage == totalPages;
    }
}